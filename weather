import tkinter as tk
import requests

def wind_direction_convert(degree):
    directions = ["North", "Northeast", "East", "Southeast", "South", "Southwest", "West", "Northwest"]
    index = round(degree / 45) % 8
    wind_direction = directions[index]
    return wind_direction

def get_weather():
    city = city_entry.get()
    city_format = city.lower().replace(' ', '+')
    url = 'http://api.openweathermap.org/data/2.5/weather?q={}&appid=e9926d9cabaa85df3a3592b64a40691b&units=metric'.format(city_format)
    
    result_label.config(text='Fetching data...')
    
    try:
        request = requests.get(url)
        request.raise_for_status()
        data = request.json()

        temp = int(data['main']['temp'])
        wind_speed = data['wind']['speed']
        wind_dir = data['wind']['deg']
        humidity = data['main']['humidity']
        high = int(data['main']['temp_max'])
        low = int(data['main']['temp_min'])
        latitude = data['coord']['lat']
        longitude = data['coord']['lon']

        result_text = (
            f'~~{city}**\n'
            f'The current temperature is: {temp}°C\n'
            f'The local high is: {high}°C\n'
            f'The local low is: {low}°C\n'
            f'The wind speed is: {wind_speed} mph\n'
            f'The wind direction is: {wind_direction_convert(wind_dir)}\n'
            f'The humidity is: {humidity}%\n'
            f'The locational coordinates for {city} are: ({latitude:.2f}, {longitude:.2f})'
        )
        
        result_label.config(text=result_text)

    except requests.exceptions.RequestException as e:
        result_label.config(text="Error fetching data. Please check your internet connection or try again later.")

# Create the main window
root = tk.Tk()
root.title('Weather App')

# Create input and output elements
city_label = tk.Label(root, text='Enter a valid city:')
city_label.pack()
city_entry = tk.Entry(root)
city_entry.pack()
get_weather_button = tk.Button(root, text='Get Weather', command=get_weather)
get_weather_button.pack()

result_label = tk.Label(root, text='', wraplength=300)
result_label.pack()

# Start the main event loop
root.mainloop()
